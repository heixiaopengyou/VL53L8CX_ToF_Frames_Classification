function[mbqTrain, mbqValidation, mbqTest] = minibatch(DsTrain, DsVal, DsTest)
miniBatchSize = 128;
XTrain = arrayDatastore(DsTrain{1},"IterationDimension",4);
TTrain = arrayDatastore(DsTrain{2});
DatastoreTrain = combine(XTrain, TTrain);
XVal = arrayDatastore(DsVal{1},"IterationDimension",4);
TVal = arrayDatastore(DsVal{2});
DatastoreVal = combine(XVal, TVal);
XTest = arrayDatastore(DsTest{1},"IterationDimension",4);
TTest = arrayDatastore(DsTest{2});
DatastoreTest = combine(XTest, TTest);
mbqTrain = minibatchqueue(DatastoreTrain, ...
    MiniBatchSize = miniBatchSize, ...
    MiniBatchFcn = @preprocessMiniBatchTraining, ...
    OutputAsDlarray = [1 1], ...
    OutputEnvironment = ["auto","auto"], ...
    PartialMiniBatch = "return", ...
    MiniBatchFormat = ["SSCB",""]);
mbqValidation = minibatchqueue(DatastoreVal, ...
    MiniBatchSize = miniBatchSize, ...
    MiniBatchFcn = @preprocessMiniBatchTraining, ...
    OutputAsDlarray = [1 1], ...
    OutputEnvironment = ["auto","auto"], ...
    PartialMiniBatch = "return", ...
    MiniBatchFormat = ["SSCB",""]);
mbqTest = minibatchqueue(DatastoreTest,...
    MiniBatchSize = miniBatchSize,...
    MiniBatchFcn = @preprocessMiniBatchTraining, ...
    OutputAsDlarray = [1 1], ...
    OutputEnvironment = ["auto","auto"], ...
    PartialMiniBatch = "return", ...
    MiniBatchFormat = ["SSCB",""]);
    function [X,T] = preprocessMiniBatchTraining(XCell,TCell)
    % Concatenate.
    X = cat(4,XCell{1:end});
    
    % Extract label data from cell and concatenate.
    T = cat(2,TCell{1:end});
    
    % One-hot encode labels.
    T = onehotencode(T,1);
    end
end
